# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type GenericResponse {
  message: String
  action: String
}

type CommentDto {
  id: ID!
  content: String!
  creatorName: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserListItemDto {
  id: String!
  email: String!
  firstName: String!
  lastName: String!
  username: String!
}

type SignInResponse {
  message: String
  action: String
  accessToken: String!
  refreshToken: String!
}

type PaginatedCommentsResponse {
  message: String
  action: String
  total: Int
  page: Int
  limit: Int
  items: [CommentDto!]
}

type ReactionsCountDto {
  like: Int!
  dislike: Int!
  smile: Int!
  angry: Int!
  sad: Int!
  love: Int!
}

type PostDetailDto {
  id: String!
  content: String!
  creatorName: String!
  creatorId: String!
  commentsCount: Int!
  reactions: ReactionsCountDto!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PaginatedUsersResponse {
  message: String
  action: String
  total: Int
  page: Int
  limit: Int
  items: [UserListItemDto!]
}

type Query {
  GetComments(postId: String!, page: Int!, limit: Int!): PaginatedCommentsResponse!
  GetPostDetail(postId: String!): PostDetailDto!
  hello: String!
  user(id: ID, username: String, firstName: String, lastName: String): UserListItemDto!
  getUsers(page: Int! = 1, limit: Int! = 10): PaginatedUsersResponse!
}

type Mutation {
  CreateAdmin(createAdminDto: CreateAdminDto!): GenericResponse!
  createGroup(createGroupDto: CreateGroupDto!): GenericResponse!
  AddReaction(createOrUpdateReactionData: CreateOrUpdateReactionDto!): GenericResponse!
  CreateComment(createComment: CreateCommentDto!, postId: String!): GenericResponse!
  PinComment(postId: String!, commentId: String!): GenericResponse!
  CreatePost(createPost: CreatePostDto!): GenericResponse!
  SignIn(signIn: SignInCredentialsDto!): SignInResponse!
  refreshToken(refreshToken: String!): SignInResponse!
  logout(userId: String!): GenericResponse!
  CreateUser(createUser: CreateUserDto!): GenericResponse!
}

input CreateAdminDto {
  username: String!
  email: String!
  password: String!
  adminRole: AdminRole! = MODERATOR
}

"""Different types of roles available"""
enum AdminRole {
  MODERATOR
  SUPERVISOR
  ADMINISTRATOR
}

input CreateGroupDto {
  name: String!
  interestId: String!
}

input CreateOrUpdateReactionDto {
  reactionType: ReactionType!
  targetId: String!
  targetType: ReactionTargetType!
}

"""Different types of reactions available"""
enum ReactionType {
  LIKE
  DISLIKE
  SMILE
  ANGRY
  SAD
  LOVE
}

"""Target type for the reaction, either POST or COMMENT"""
enum ReactionTargetType {
  POST
  COMMENT
}

input CreateCommentDto {
  content: String!
}

input CreatePostDto {
  content: String!
  interestId: String
  groupId: String
}

input SignInCredentialsDto {
  password: String!
  passwordRepeat: String!
  email: String!
}

input CreateUserDto {
  firstName: String!
  lastName: String!
  password: String!
  repeatPassword: String!
  email: String!
}